@model LearnIn.ViewModels.CreateCourseViewModel // Ensure this matches

@{
    ViewData["Title"] = "Create Course";
}

<h2>Create Course</h2>

<form asp-action="CreateCourse" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Duration"></label>
        <input asp-for="Duration" class="form-control" />
        <span asp-validation-for="Duration" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Category"></label>
        <select asp-for="Category" class="form-control" asp-items="ViewBag.CategorySelectList"></select>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Image"></label>
        <input asp-for="Image" type="file" class="form-control" />
        <span asp-validation-for="Image" class="text-danger"></span>
    </div>

    <h4>Topics</h4>
    <div id="topicsContainer">
        @if (Model.Topics != null && Model.Topics.Count > 0)
        {
            for (int i = 0; i < Model.Topics.Count; i++)
            {
                <div class="topic">
                    <label asp-for="Topics[@i].Name"></label>
                    <input asp-for="Topics[@i].Name" class="form-control" />
                    <span asp-validation-for="Topics[@i].Name" class="text-danger"></span>

                    <h5>Contents</h5>
                    @if (Model.Topics[i].TopicContents != null && Model.Topics[i].TopicContents.Count > 0)
                    {
                        for (int j = 0; j < Model.Topics[i].TopicContents.Count; j++)
                        {
                            
                        }
                    }
                    else
                    {
                        <p>No contents available.</p>
                    }
                </div>
            }
        }
        else
        {
            <p>No topics available.</p>
        }
    </div>

    <button type="submit" class="btn btn-primary">Create Course</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
